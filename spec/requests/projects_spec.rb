 require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/projects", type: :request do
  # Project. As you add validations to Project, be sure to
  # adjust the attributes here as well.
  let(:user) {create(:user)}
  let(:valid_attributes) {
    {name: "A Rated", description: "Pro Team", user_id: user.id}
  }

  let(:invalid_attributes) {
    {name: "A Rated", description: ""}
  }

  before :each do
    sign_in(user)
  end

  describe "GET /show" do
    it "renders a successful response" do
      project = Project.create! valid_attributes
      get project_url(project)
      expect(response).to be_successful
    end
  end

  describe "GET /edit" do
    it "render a successful response" do
      project = Project.create! valid_attributes
      get edit_project_url(project.id), xhr: true, params: { id: project.id }
      expect(response).to be_successful
    end
  end

  describe "PATCH /update" do
    context "with valid parameters" do
      let(:new_attributes) {
        {name: "B Rated", description: "Pro Team B", user_id: user.id}
      }

      it "updates the requested project" do
        project = Project.create! valid_attributes
        patch project_url(project), params: { project: new_attributes }
        project.reload
        expect(project.name).to eq("B Rated")
      end
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested project" do
      project = Project.create! valid_attributes
      expect {
        delete project_url(project)
      }.to change(Project, :count).by(-1)
    end
  end
end
